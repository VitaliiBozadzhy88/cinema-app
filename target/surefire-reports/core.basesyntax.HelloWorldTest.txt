Senior

Общие вопросы

1.Когда лучше использовать наследование, а не агрегацию?

2. Расскажите о принципах работы Kubernetes.

Java Core

3. В чем разница между Java NIO и Java IO?

4. Чем Lambda отличается от анонимного класса?

5. Расскажите о Java Memory Model.

6. Какие есть типы памяти в JVM?

7. Опишите жизненный цикл Java-объекта. Каким образом объект переходит из одной области памяти Garbage Collector в другую? Что является триггером такого перехода?

8. Каким образом можно заставить JVM запустить Garbage Collector?

9. Какие существуют Garbage Collectors в JVM и зачем их столько?

10. Какие виды Garbage Collector есть в HotSpot? Как работают?

11. Что будет с Garbage Collector, если finalize() будет долго выполняться или в процессе выполнения получим исключение?

12. Чем ForkJoinPool отличается от ScheduledThreadPoolExecutor и ThreadPoolExcutor?

13. В чем разница между HashMap, WeakHashMap, Hashtable, IdentityHashMap?

14. Что такое LinkedHashMap?

15. Что такое EnumSet? Для чего использовать? Как реализовать?

16. Расскажите об особенностях сериализации в Java. Зачем serialVersionUID и InvalidClassException?

17. В чем проблема сериализации Singleton?

18. Какие бывают алгоритмы обхода деревьев и почему они разные?

19. Что такое deadlock? Какие типы существуют? Нарисуйте схематично, как может произойти.

Базы данных

20. Что такое ACID?

21. Что означает CAP-теорема?

22. Какие есть уровни изоляции транзакций?

23. Есть ли смысл отказываться от использования ORM?

24. Что такое n+1 проблема?

25. Что такое cartesian product проблема?

Библиотеки и инструменты

26. Каким образом можно построить monitoring в Java? Расскажите об особенностях использования Java micrometrics или DropWizard, или Prometheus frameworks.

27. Опишите механизм работы ORM.

28. Какие способы выборки данных в Hibernate вы знаете?

29. Какие изоляции транзакций существуют в Hibernate?

Spring

30. Что такое IoC и DI?

31. Каков жизненный цикл объектов, которые создает Spring?

32. Какие есть виды контекстов?

33. Как создать и поднять контекст с целью тестирования приложения?

34. Какие возможности Spring предоставляет для коммуникации с базой данных?

35. Каковы признаки того, что класс — Java Bean? Чем POJO отличается от Java Bean?

36. Опишите механизм инъекции зависимости в Spring.

37. Почему все зависимости Spring являются Java Beans? Возможно ли использовать Spring для управления зависимостями между НЕ Java Beans классами?

38. Чем Spring singleton отличается от prototype?

39. Есть ли смысл отказываться от использования Dependency Injection?

Многопоточность

40. Что такое race-condition?

41. Какие элементы есть в java.util.concurrent пакете?

42. Что такое optimistic и pessimistic locking?

43. Каковы особенности многопоточности в Java EE и Spring?

Stream API

44. Каковы основные принципы Stream API?

Практические задания

45. Реализовать сервис, который на вход принимает url и возвращает короткую версию (вроде bit.ly/86gfr3).